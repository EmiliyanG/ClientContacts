<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:b="clr-namespace:ClientContactViews"
                    xmlns:local="clr-namespace:ClientContactViews">
    <SolidColorBrush x:Key="lighter" Color="#FEFEFF"/>
    <SolidColorBrush x:Key="light" Color="#897BAF"/>
    <SolidColorBrush x:Key="medium" Color="#423075"/>
    <SolidColorBrush x:Key="dark" Color="#14073A"/>
    <SolidColorBrush x:Key="darker" Color="#000000"/>
    <SolidColorBrush x:Key="listBoxItemBackground" Color="#e6e6ef"/>
    <SolidColorBrush x:Key="expanderBackground" Color="#d0d0e8"/>
    <local:MyNullVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <local:MarginConverter x:Key="NullToMarginConverter"/>
    <local:CollectionViewGroupToVisibilityConverter x:Key="CollectionViewGroupToVisibilityConverter"/>
    
    <Style x:Key="toggleBtn1" TargetType="ToggleButton">
        <Setter Property="IsChecked" Value="{Binding Path=IsExpanded,Mode=TwoWay,
                                    RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Padding="6,4" Background="Transparent">
                        <Path Name="Arrow"
                                            Fill="{StaticResource dark}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M 0 0 L 8 8 L 16 0 Z"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Property="Fill"
                                                Value="{StaticResource light}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Arrow" Property="Fill"
                                                Value="{StaticResource medium}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Arrow" Property="Data"
                                                Value="M 0 8 L 8 0 L 16 8 Z" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Opacity"
                                                Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="expanderButton" TargetType="Button" >
        <Setter Property="Content" 
                Value="{Binding Path=Name}"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Background" Value="{StaticResource lighter}"/>
        <Setter Property="BorderThickness" Value="5,0,0,0" />
        <Setter Property="BorderBrush" Value="{StaticResource expanderBackground}"/>
        <Setter Property="Height" Value="50"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" Margin="30,0,0,0" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource light}"/>
                <Setter Property="BorderBrush" Value="{StaticResource light}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="expander" TargetType="Expander">
        
        
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Name="ContentRow" Height="0"/>
                        </Grid.RowDefinitions>

                        <Border >
                            <Grid Visibility="{Binding Name, Converter={StaticResource NullToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Button Style="{StaticResource expanderButton}" />
                                <ToggleButton Style="{StaticResource toggleBtn1}"/>
                                <local:ExpandableMenuButtons  
                                    
                                    Grid.Column="1" 
                                    HorizontalAlignment="Right"
                                    Visibility="{Binding Path=. ,Converter={StaticResource CollectionViewGroupToVisibilityConverter}}"/>
                                
                            </Grid>
                        </Border>
                        <ContentPresenter Grid.Row="1" Margin="{Binding Name, Converter={StaticResource NullToMarginConverter}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="Auto" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="organisationGroupStyle" TargetType="{x:Type GroupItem}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Expander Style="{StaticResource expander}" 
                              IsExpanded="True">
                        <ItemsPresenter />
                        
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="contactListItem" TargetType="{x:Type ListBoxItem}">

        <Setter Property="Background" Value="{StaticResource listBoxItemBackground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource light}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource light}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource light}" />
                        </MultiTrigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="GotKeyboardFocus">
                            <BeginStoryboard>
                                <!--Storyboard used to prevent listboxitems from being deselected on losing focus-->
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsSelected">
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        
                            
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="contactListDataTemplate">
        <local:Contact  />
    </DataTemplate>
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <CollectionViewSource x:Key="listSource" Source="{Binding ContactItems}"  >

        <CollectionViewSource.GroupDescriptions>
            <PropertyGroupDescription  PropertyName="organisationName"/>
            <PropertyGroupDescription  PropertyName="locationName" />
        </CollectionViewSource.GroupDescriptions>
    </CollectionViewSource>
</ResourceDictionary>